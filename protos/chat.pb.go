// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type UserList struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserList) Reset()         { *m = UserList{} }
func (m *UserList) String() string { return proto.CompactTextString(m) }
func (*UserList) ProtoMessage()    {}
func (*UserList) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{1}
}

func (m *UserList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserList.Unmarshal(m, b)
}
func (m *UserList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserList.Marshal(b, m, deterministic)
}
func (m *UserList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserList.Merge(m, src)
}
func (m *UserList) XXX_Size() int {
	return xxx_messageInfo_UserList.Size(m)
}
func (m *UserList) XXX_DiscardUnknown() {
	xxx_messageInfo_UserList.DiscardUnknown(m)
}

var xxx_messageInfo_UserList proto.InternalMessageInfo

func (m *UserList) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type RegisterRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{2}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type User struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{3}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type NewMessage struct {
	ReceiverId           string   `protobuf:"bytes,1,opt,name=ReceiverId,proto3" json:"ReceiverId,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewMessage) Reset()         { *m = NewMessage{} }
func (m *NewMessage) String() string { return proto.CompactTextString(m) }
func (*NewMessage) ProtoMessage()    {}
func (*NewMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{4}
}

func (m *NewMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewMessage.Unmarshal(m, b)
}
func (m *NewMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewMessage.Marshal(b, m, deterministic)
}
func (m *NewMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewMessage.Merge(m, src)
}
func (m *NewMessage) XXX_Size() int {
	return xxx_messageInfo_NewMessage.Size(m)
}
func (m *NewMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_NewMessage.DiscardUnknown(m)
}

var xxx_messageInfo_NewMessage proto.InternalMessageInfo

func (m *NewMessage) GetReceiverId() string {
	if m != nil {
		return m.ReceiverId
	}
	return ""
}

func (m *NewMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DirectMessage struct {
	SenderId             string               `protobuf:"bytes,1,opt,name=SenderId,proto3" json:"SenderId,omitempty"`
	Message              string               `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,3,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DirectMessage) Reset()         { *m = DirectMessage{} }
func (m *DirectMessage) String() string { return proto.CompactTextString(m) }
func (*DirectMessage) ProtoMessage()    {}
func (*DirectMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{5}
}

func (m *DirectMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectMessage.Unmarshal(m, b)
}
func (m *DirectMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectMessage.Marshal(b, m, deterministic)
}
func (m *DirectMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectMessage.Merge(m, src)
}
func (m *DirectMessage) XXX_Size() int {
	return xxx_messageInfo_DirectMessage.Size(m)
}
func (m *DirectMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DirectMessage proto.InternalMessageInfo

func (m *DirectMessage) GetSenderId() string {
	if m != nil {
		return m.SenderId
	}
	return ""
}

func (m *DirectMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DirectMessage) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type SubscriptionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriptionRequest) Reset()         { *m = SubscriptionRequest{} }
func (m *SubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*SubscriptionRequest) ProtoMessage()    {}
func (*SubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{6}
}

func (m *SubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionRequest.Unmarshal(m, b)
}
func (m *SubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *SubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionRequest.Merge(m, src)
}
func (m *SubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_SubscriptionRequest.Size(m)
}
func (m *SubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionRequest proto.InternalMessageInfo

type UserStatusChange struct {
	Changed              *User    `protobuf:"bytes,1,opt,name=Changed,proto3" json:"Changed,omitempty"`
	Add                  bool     `protobuf:"varint,2,opt,name=Add,proto3" json:"Add,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserStatusChange) Reset()         { *m = UserStatusChange{} }
func (m *UserStatusChange) String() string { return proto.CompactTextString(m) }
func (*UserStatusChange) ProtoMessage()    {}
func (*UserStatusChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{7}
}

func (m *UserStatusChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserStatusChange.Unmarshal(m, b)
}
func (m *UserStatusChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserStatusChange.Marshal(b, m, deterministic)
}
func (m *UserStatusChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserStatusChange.Merge(m, src)
}
func (m *UserStatusChange) XXX_Size() int {
	return xxx_messageInfo_UserStatusChange.Size(m)
}
func (m *UserStatusChange) XXX_DiscardUnknown() {
	xxx_messageInfo_UserStatusChange.DiscardUnknown(m)
}

var xxx_messageInfo_UserStatusChange proto.InternalMessageInfo

func (m *UserStatusChange) GetChanged() *User {
	if m != nil {
		return m.Changed
	}
	return nil
}

func (m *UserStatusChange) GetAdd() bool {
	if m != nil {
		return m.Add
	}
	return false
}

type ServerUpdate struct {
	// Types that are valid to be assigned to Content:
	//	*ServerUpdate_IncomingMessage
	//	*ServerUpdate_UserOnlineStatus
	Content              isServerUpdate_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ServerUpdate) Reset()         { *m = ServerUpdate{} }
func (m *ServerUpdate) String() string { return proto.CompactTextString(m) }
func (*ServerUpdate) ProtoMessage()    {}
func (*ServerUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{8}
}

func (m *ServerUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerUpdate.Unmarshal(m, b)
}
func (m *ServerUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerUpdate.Marshal(b, m, deterministic)
}
func (m *ServerUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerUpdate.Merge(m, src)
}
func (m *ServerUpdate) XXX_Size() int {
	return xxx_messageInfo_ServerUpdate.Size(m)
}
func (m *ServerUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ServerUpdate proto.InternalMessageInfo

type isServerUpdate_Content interface {
	isServerUpdate_Content()
}

type ServerUpdate_IncomingMessage struct {
	IncomingMessage *DirectMessage `protobuf:"bytes,1,opt,name=incoming_message,json=incomingMessage,proto3,oneof"`
}

type ServerUpdate_UserOnlineStatus struct {
	UserOnlineStatus *UserStatusChange `protobuf:"bytes,2,opt,name=user_online_status,json=userOnlineStatus,proto3,oneof"`
}

func (*ServerUpdate_IncomingMessage) isServerUpdate_Content() {}

func (*ServerUpdate_UserOnlineStatus) isServerUpdate_Content() {}

func (m *ServerUpdate) GetContent() isServerUpdate_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *ServerUpdate) GetIncomingMessage() *DirectMessage {
	if x, ok := m.GetContent().(*ServerUpdate_IncomingMessage); ok {
		return x.IncomingMessage
	}
	return nil
}

func (m *ServerUpdate) GetUserOnlineStatus() *UserStatusChange {
	if x, ok := m.GetContent().(*ServerUpdate_UserOnlineStatus); ok {
		return x.UserOnlineStatus
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ServerUpdate) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ServerUpdate_IncomingMessage)(nil),
		(*ServerUpdate_UserOnlineStatus)(nil),
	}
}

func init() {
	proto.RegisterType((*Empty)(nil), "Empty")
	proto.RegisterType((*UserList)(nil), "UserList")
	proto.RegisterType((*RegisterRequest)(nil), "RegisterRequest")
	proto.RegisterType((*User)(nil), "User")
	proto.RegisterType((*NewMessage)(nil), "NewMessage")
	proto.RegisterType((*DirectMessage)(nil), "DirectMessage")
	proto.RegisterType((*SubscriptionRequest)(nil), "SubscriptionRequest")
	proto.RegisterType((*UserStatusChange)(nil), "UserStatusChange")
	proto.RegisterType((*ServerUpdate)(nil), "ServerUpdate")
}

func init() {
	proto.RegisterFile("chat.proto", fileDescriptor_8c585a45e2093e54)
}

var fileDescriptor_8c585a45e2093e54 = []byte{
	// 473 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0x5b, 0x6f, 0xd3, 0x3e,
	0x14, 0x5f, 0x7a, 0x59, 0xd3, 0xd3, 0x5d, 0x32, 0xff, 0xff, 0x48, 0x25, 0x20, 0x56, 0x85, 0x07,
	0xfa, 0x82, 0x37, 0x65, 0x8f, 0x3c, 0x6d, 0x6c, 0xb0, 0x49, 0x5c, 0x24, 0x77, 0x7b, 0xe1, 0xa5,
	0x4a, 0x93, 0x43, 0x66, 0x69, 0x71, 0x82, 0xed, 0x0c, 0xf1, 0x51, 0xf8, 0x5c, 0x7c, 0x21, 0x14,
	0x3b, 0x0e, 0x6d, 0x05, 0x4f, 0xf1, 0xb1, 0xcf, 0x39, 0xf9, 0xdd, 0x00, 0xd2, 0xfb, 0x44, 0xd3,
	0x4a, 0x96, 0xba, 0x0c, 0x8f, 0xf3, 0xb2, 0xcc, 0x1f, 0xf0, 0xc4, 0x54, 0xab, 0xfa, 0xeb, 0x89,
	0xe6, 0x05, 0x2a, 0x9d, 0x14, 0x95, 0x6d, 0x88, 0x46, 0x30, 0xbc, 0x2a, 0x2a, 0xfd, 0x23, 0x7a,
	0x05, 0xfe, 0x9d, 0x42, 0xf9, 0x81, 0x2b, 0x4d, 0x9e, 0xc1, 0xb0, 0x56, 0x28, 0xd5, 0xd4, 0x9b,
	0xf5, 0xe7, 0x93, 0x78, 0x48, 0x9b, 0x17, 0x66, 0xef, 0xa2, 0xd7, 0x70, 0xc8, 0x30, 0xe7, 0x4a,
	0xa3, 0x64, 0xf8, 0xad, 0x46, 0xa5, 0x49, 0x68, 0x67, 0x45, 0x52, 0xe0, 0xd4, 0x9b, 0x79, 0xf3,
	0x31, 0xeb, 0xea, 0x28, 0x86, 0x41, 0x73, 0x26, 0x07, 0xd0, 0xbb, 0xc9, 0xda, 0xd7, 0xde, 0x4d,
	0xb6, 0x31, 0xd3, 0xdb, 0x9a, 0x79, 0x07, 0xf0, 0x09, 0xbf, 0x7f, 0x44, 0xa5, 0x92, 0x1c, 0xc9,
	0x0b, 0x00, 0x86, 0x29, 0xf2, 0x47, 0x94, 0xdd, 0x86, 0xb5, 0x1b, 0x32, 0x85, 0x51, 0xdb, 0xda,
	0x2e, 0x72, 0x65, 0x54, 0xc3, 0xfe, 0x25, 0x97, 0x98, 0x6a, 0xb7, 0x2a, 0x04, 0x7f, 0x81, 0x22,
	0x5b, 0x5b, 0xd4, 0xd5, 0xff, 0x5e, 0x43, 0x28, 0x0c, 0x6e, 0x79, 0x81, 0xd3, 0xfe, 0xcc, 0x9b,
	0x4f, 0xe2, 0x90, 0x5a, 0x4d, 0xa9, 0xd3, 0x94, 0xde, 0x3a, 0x4d, 0x99, 0xe9, 0x8b, 0x9e, 0xc0,
	0x7f, 0x8b, 0x7a, 0xa5, 0x52, 0xc9, 0x2b, 0xcd, 0x4b, 0xd1, 0xaa, 0x14, 0x5d, 0x41, 0xd0, 0x30,
	0x5c, 0xe8, 0x44, 0xd7, 0xea, 0xed, 0x7d, 0x22, 0x72, 0x24, 0xc7, 0x30, 0xb2, 0x27, 0x8b, 0xa7,
	0xd3, 0xda, 0xdd, 0x92, 0x00, 0xfa, 0xe7, 0x59, 0x66, 0x10, 0xf9, 0xac, 0x39, 0x46, 0x3f, 0x3d,
	0xd8, 0x5b, 0xa0, 0x7c, 0x44, 0x79, 0x57, 0x65, 0x89, 0x46, 0xf2, 0x06, 0x02, 0x2e, 0xd2, 0xb2,
	0xe0, 0x22, 0x5f, 0x16, 0x2d, 0x03, 0xbb, 0xec, 0x80, 0x6e, 0xd0, 0xbf, 0xde, 0x61, 0x87, 0xae,
	0xd3, 0x71, 0x3b, 0x07, 0xd2, 0xd8, 0xba, 0x2c, 0xc5, 0x03, 0x17, 0xb8, 0x54, 0x06, 0x9c, 0xf9,
	0xdd, 0x24, 0x3e, 0xa2, 0xdb, 0x78, 0xaf, 0x77, 0x58, 0xd0, 0xb4, 0x7f, 0x36, 0xdd, 0xf6, 0xe5,
	0x62, 0x0c, 0xa3, 0xb4, 0x14, 0x1a, 0x85, 0x8e, 0x7f, 0x79, 0xb0, 0xe7, 0xc2, 0x61, 0x5c, 0x7f,
	0x09, 0xbe, 0xab, 0x49, 0x40, 0xb7, 0x72, 0x13, 0x5a, 0xb2, 0xe4, 0x29, 0x0c, 0x4c, 0xec, 0x76,
	0xa9, 0x89, 0x62, 0x38, 0xa6, 0x5d, 0x12, 0x4f, 0xe1, 0xa8, 0x31, 0x68, 0xd3, 0xc5, 0x09, 0xfd,
	0x93, 0x8e, 0x70, 0x8b, 0x23, 0x39, 0x03, 0x78, 0x8f, 0xda, 0x4a, 0xa3, 0xc8, 0xff, 0xf4, 0x2f,
	0x4e, 0x84, 0xfb, 0x74, 0x5d, 0xc0, 0x53, 0x8f, 0x3c, 0x07, 0xb8, 0x44, 0xe9, 0x80, 0x3a, 0x1c,
	0xed, 0xf7, 0xc2, 0xff, 0xb2, 0x6b, 0xbc, 0x56, 0x2b, 0xfb, 0x3d, 0xfb, 0x1d, 0x00, 0x00, 0xff,
	0xff, 0xee, 0x04, 0xfe, 0x41, 0x63, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RegisterUserClient is the client API for RegisterUser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegisterUserClient interface {
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*User, error)
	List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*UserList, error)
	SendDirectMessage(ctx context.Context, in *NewMessage, opts ...grpc.CallOption) (*DirectMessage, error)
	GetUpdates(ctx context.Context, in *SubscriptionRequest, opts ...grpc.CallOption) (RegisterUser_GetUpdatesClient, error)
	Deregister(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
}

type registerUserClient struct {
	cc grpc.ClientConnInterface
}

func NewRegisterUserClient(cc grpc.ClientConnInterface) RegisterUserClient {
	return &registerUserClient{cc}
}

func (c *registerUserClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/RegisterUser/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registerUserClient) List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*UserList, error) {
	out := new(UserList)
	err := c.cc.Invoke(ctx, "/RegisterUser/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registerUserClient) SendDirectMessage(ctx context.Context, in *NewMessage, opts ...grpc.CallOption) (*DirectMessage, error) {
	out := new(DirectMessage)
	err := c.cc.Invoke(ctx, "/RegisterUser/SendDirectMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registerUserClient) GetUpdates(ctx context.Context, in *SubscriptionRequest, opts ...grpc.CallOption) (RegisterUser_GetUpdatesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RegisterUser_serviceDesc.Streams[0], "/RegisterUser/GetUpdates", opts...)
	if err != nil {
		return nil, err
	}
	x := &registerUserGetUpdatesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RegisterUser_GetUpdatesClient interface {
	Recv() (*ServerUpdate, error)
	grpc.ClientStream
}

type registerUserGetUpdatesClient struct {
	grpc.ClientStream
}

func (x *registerUserGetUpdatesClient) Recv() (*ServerUpdate, error) {
	m := new(ServerUpdate)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *registerUserClient) Deregister(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/RegisterUser/Deregister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegisterUserServer is the server API for RegisterUser service.
type RegisterUserServer interface {
	Register(context.Context, *RegisterRequest) (*User, error)
	List(context.Context, *Empty) (*UserList, error)
	SendDirectMessage(context.Context, *NewMessage) (*DirectMessage, error)
	GetUpdates(*SubscriptionRequest, RegisterUser_GetUpdatesServer) error
	Deregister(context.Context, *Empty) (*Empty, error)
}

// UnimplementedRegisterUserServer can be embedded to have forward compatible implementations.
type UnimplementedRegisterUserServer struct {
}

func (*UnimplementedRegisterUserServer) Register(ctx context.Context, req *RegisterRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedRegisterUserServer) List(ctx context.Context, req *Empty) (*UserList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedRegisterUserServer) SendDirectMessage(ctx context.Context, req *NewMessage) (*DirectMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendDirectMessage not implemented")
}
func (*UnimplementedRegisterUserServer) GetUpdates(req *SubscriptionRequest, srv RegisterUser_GetUpdatesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetUpdates not implemented")
}
func (*UnimplementedRegisterUserServer) Deregister(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Deregister not implemented")
}

func RegisterRegisterUserServer(s *grpc.Server, srv RegisterUserServer) {
	s.RegisterService(&_RegisterUser_serviceDesc, srv)
}

func _RegisterUser_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegisterUserServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RegisterUser/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegisterUserServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegisterUser_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegisterUserServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RegisterUser/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegisterUserServer).List(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegisterUser_SendDirectMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegisterUserServer).SendDirectMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RegisterUser/SendDirectMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegisterUserServer).SendDirectMessage(ctx, req.(*NewMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegisterUser_GetUpdates_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscriptionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RegisterUserServer).GetUpdates(m, &registerUserGetUpdatesServer{stream})
}

type RegisterUser_GetUpdatesServer interface {
	Send(*ServerUpdate) error
	grpc.ServerStream
}

type registerUserGetUpdatesServer struct {
	grpc.ServerStream
}

func (x *registerUserGetUpdatesServer) Send(m *ServerUpdate) error {
	return x.ServerStream.SendMsg(m)
}

func _RegisterUser_Deregister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegisterUserServer).Deregister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RegisterUser/Deregister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegisterUserServer).Deregister(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _RegisterUser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RegisterUser",
	HandlerType: (*RegisterUserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _RegisterUser_Register_Handler,
		},
		{
			MethodName: "List",
			Handler:    _RegisterUser_List_Handler,
		},
		{
			MethodName: "SendDirectMessage",
			Handler:    _RegisterUser_SendDirectMessage_Handler,
		},
		{
			MethodName: "Deregister",
			Handler:    _RegisterUser_Deregister_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetUpdates",
			Handler:       _RegisterUser_GetUpdates_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "chat.proto",
}
